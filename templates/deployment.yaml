{{- $releaseNamespace := .Release.Namespace -}}
{{- $releaseName := .Release.Name -}}
{{- $clusteringress := .Values.ingress.host -}}
{{- if .Values.global.route.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ui.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "ui.name" . }}
    helm.sh/chart: {{ include "ui.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app: {{ include "ui.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ui.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ui.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ include "ui.fullname" . }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault  
      serviceAccount: {{ .Release.Name }}
      {{- if .Values.initContainer.enabled }}
      initContainers:      
      - name: "{{ .Values.initContainer.name }}"
        {{- if .Values.global.global_repo }}
        image: "{{ .Values.global.repository }}/{{ .Values.initContainer.image.imagename }}:{{ .Values.initContainer.image.tag }}"
        {{- else}}
        image: "{{ .Values.initContainer.image.repository }}/{{ .Values.initContainer.image.imagename }}:{{ .Values.initContainer.image.tag }}"
        {{- end}}
        imagePullPolicy: "{{ .Values.initContainer.image.pullPolicy }}"
        resources:
{{ toYaml .Values.initContainer.resources | indent 12 }}
        command: ["/bin/sh", "-c", "for i in $(seq 1 200); do nc -z -w3 {{ $releaseName }}-bff 8000 && exit 0 || sleep 3; done; exit 1"]
      {{- end}}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.global.global_repo }}
          image: "{{ .Values.global.repository }}/{{ .Values.image.imagename }}:{{ .Values.image.tag }}"
          {{- else}}
          image: "{{ .Values.image.repository }}/{{ .Values.image.imagename }}:{{ .Values.image.tag }}"
          {{- end}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          #UI Env Variable
          env:
          {{- range $key, $value := .Values.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          - name: REACT_APP_ROOT
            value: https://vz-ibm-genai.{{ .Values.global.ingress}}
          - name: REACT_APP_ROOT_REPLACE
            value: https://vz-ibm-genai.{{ .Values.global.ingress}}
          - name: BFF_API_URL
            value: https://vz-ibm-genai.{{ .Values.global.ingress}}/bff
          - name: SERVICE_API_URL
            value: https://vz-ibm-genai.{{ .Values.global.ingress}}/svc
          - name: KEYCLOAK_SERVER
            value: https://vz-ibm-genai.{{ .Values.global.ingress}}
          - name: NOC_RCA_URL
            value: https://vz-ibm-genai.{{ .Values.global.ingress}}/conversation
          - name: NOC_RCA_NAV_URL
            value: https://vz-ibm-genai.{{ .Values.global.ingress}}/conversation
          - name: SUPER_NOC_URL
            value: https://vz-ibm-genai.{{ .Values.global.ingress}}/image-topology
          - name: EASEMENT_NOC_URL
            values: https://vz-ibm-genai.{{ .Values.global.ingress}}/easement
          - name: FIBER_OPTIC_NOC_URL
            values: https://vz-ibm-genai.{{ .Values.global.ingress}}/fiber-analysis
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
